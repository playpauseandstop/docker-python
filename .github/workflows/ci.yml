defaults:
  run:
    shell: "bash"

name: "CI"

on:
  push:
    branches: ["master"]
    tags: ["*"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    name: "Verify that Docker image build well"

    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2.4.0"

      - name: "Cache Docker layers"
        uses: "actions/cache@v2.1.6"
        with:
          path: "/tmp/.buildx-cache"
          key: "${{ runner.os }}-buildx-${{ github.sha }}"
          restore-keys:
            ${{ runner.os }}-buildx-

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v1.10.0"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"

      - id: "buildx"
        name: "Setup Docker Buildx"
        uses: "docker/setup-buildx-action@v1.6.0"

      - id: "docker_build"
        name: "Build Docker image"
        uses: "docker/build-push-action@v2.7.0"
        with:
          builder: "${{ steps.buildx.outputs.name }}"
          context: "./"
          file: "./Dockerfile"
          push: false
          tags: "${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest"
          cache-from: "type=local,src=/tmp/.buildx-cache"
          cache-to: "type=local,dest=/tmp/.buildx-cache"

      - name: "Docker image digest"
        run: "echo ${{ steps.docker_build.outputs.digest }}"

  deploy:
    needs: ["build"]
    name: "Push Docker image to the Docker Hub"
    if: "${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}"

    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2.4.0"

      - name: "Cache Docker layers"
        uses: "actions/cache@v2.1.6"
        with:
          path: "/tmp/.buildx-cache"
          key: "${{ runner.os }}-buildx-${{ github.sha }}"
          restore-keys:
            ${{ runner.os }}-buildx-

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v1.10.0"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"

      - id: "buildx"
        name: "Setup Docker Buildx"
        uses: "docker/setup-buildx-action@v1.6.0"

      - id: "deploy_info"
        name: "Setup deploy info"
        run: |
          set -euo pipefail

          base_tag_name="${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}"
          tag_name="${base_tag_name}:latest"

          if [ "${GITHUB_REF::10}" = "refs/tags/" ]; then
            git_tag_name="${GITHUB_REF:10}"
            tag_name="${base_tag_name}:${git_tag_name}"
          fi

          echo "::set-output name=tag_name::${tag_name}"

      - id: "docker_build"
        name: "Build & push Docker image"
        uses: "docker/build-push-action@v2.7.0"
        with:
          builder: "${{ steps.buildx.outputs.name }}"
          context: "./"
          file: "./Dockerfile"
          push: true
          tags: "${{ steps.deploy_info.outputs.tag_name }}"
          cache-from: "type=local,src=/tmp/.buildx-cache"
          cache-to: "type=local,dest=/tmp/.buildx-cache"

      - name: "Docker image digest"
        run: "echo ${{ steps.docker_build.outputs.digest }}"
